{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["module","exports","App","props","state","year","data","filteredData","totals","bike","run","workout","monthly","filter","streaks","current","start","length","longest","Promise","resolve","Tabletop","init","key","callback","sheets","elements","wanted","rawData","map","day","date","Number","comments","reduce","total","dayDiff","dateFrom","dateTo","Math","abs","Date","acc","curr","result","month","moment","format","push","Object","entries","days","sum","this","fetchData","prevProps","prevState","setState","calculateFilteredData","loadSheet","then","normalize","calculateYearlyTotals","calculateStreaksOfActivity","calculateMonthlyTotals","ReactTooltip","rebuild","catch","e","console","error","bikeWeight","includes","runWeight","workoutWeight","score","className","src","logo","alt","startDate","endDate","values","classForValue","showWeekdayLabels","tooltipDataAttrs","value","lines","join","weekdayLabels","type","checked","onChange","role","aria-label","floor","effect","multiline","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.627aa019.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff816526.svg\";","import React, { Component } from 'react';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport Tabletop from 'tabletop';\nimport ReactTooltip from 'react-tooltip'\nimport moment from 'moment';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport './react-calendar-heatmap.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      year: '2020',\n      // data: [  // example data\n      //   { date: '2018-06-01', bike: \"25\", run: \"0\", workout: \"60\", comments: \"been there, done that\" },\n      //   { date: '2018-06-03', bike: \"48\", run: \"0\", workout: \"\" },\n      //   { date: '2018-06-06', bike: \"3\", run: \"10\", workout: \"\" },\n      // ],\n      data: [],\n      filteredData: [],\n      totals: {\n        bike: 0, // km\n        run: 0, // km\n        workout: 0, //mins\n      },\n      monthly: {},\n      filter: 'all',\n      streaks: { current: { start: '', length: 0 }, longest: { start: '', length: 0 } },\n    };\n  }\n\n  loadSheet(year) {\n    // TODO error handling\n    return new Promise((resolve) => {\n      const sheetUrl = 'https://docs.google.com/spreadsheets/d/1CK1dlXslA7_wRth0SYvTf4wY2xgzk2gKGD1uw6SVyKg/edit?usp=sharing';\n\n      const callback = (sheets) => {\n        resolve(sheets[year].elements);\n      };\n      Tabletop.init({ key: sheetUrl, callback, wanted: [year] });\n    });\n  }\n\n  normalize(rawData) {\n    return rawData.map(day => ({\n      date: day.date,\n      bike: Number(day.bike || 0),\n      run: Number(day.run || 0),\n      workout: Number(day.workout || 0),\n      comments: day.comments,\n    }))\n    // filter out the days with no activity\n    .filter(day => (day.bike + day.run + day.workout > 0));\n  }\n\n  calculateYearlyTotals(data) {\n    return data.reduce((total, day) => {\n      total.bike += day.bike;\n      total.run += day.run;\n      total.workout += day.workout;\n      return total;\n    }, { bike: 0, run: 0, workout: 0 });\n  }\n\n  calculateStreaksOfActivity(data) {\n    const dayDiff = (dateFrom, dateTo) => Math.abs(new Date(dateTo) - new Date(dateFrom)) / (1000 * 60 * 60 * 24);\n\n    // find the longest streak of activity\n    const streaks = data.reduce((acc, curr) => {\n      if (!acc.start) {\n        return { start: curr.date, length: 1, longest: { start: curr.date, length: 1 } };\n      }\n      if (dayDiff(acc.start, curr.date) === acc.length) { // streak continues\n        acc.length++;\n      } else { // streak interrupted\n        if (acc.length > acc.longest.length) {\n          acc.longest = { start: acc.start, length: acc.length };\n        }\n        acc.start = curr.date;\n        acc.length = 1;\n      }\n      return acc;\n    }, {});\n\n    // see if the current streak is the longest one\n    const longest = (streaks.length > streaks.longest.length)\n      ? { start: streaks.start, length: streaks.length }\n      : streaks.longest;\n\n    const current = dayDiff(streaks.start, new Date()) <= streaks.length + 1\n      ? { start: streaks.start, length: streaks.length }\n      : { length: 0 };\n\n    return { longest, current };\n  }\n\n  calculateMonthlyTotals(data) {\n    const result = data\n      .reduce((acc, day) => {\n        const month = moment(day.date).format('MMMM');\n        (acc[month] = acc[month] || []).push(day);\n        return acc;\n      }, {});\n    // result is: { January: [{},{},{}], February: [{},...], ... }\n\n    return Object.entries(result).reduce((acc, [month, days]) => {\n      // reduce days in a month:\n      acc[month] = days.reduce((sum, day) => {\n        sum.bike += day.bike;\n        sum.run += day.run;\n        sum.workout += day.workout;\n        return sum;\n      }, { bike: 0, run: 0, workout: 0 });\n      return acc;\n    }, {});\n  }\n\n  componentWillMount() {\n    this.fetchData(this.state.year);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.year !== prevState.year) {\n      this.fetchData(this.state.year);\n    }\n    if (this.state.filter !== prevState.filter) {\n      this.setState(state => ({\n        filteredData: this.calculateFilteredData(state.data, state.filter)\n      }));\n    }\n  }\n\n  fetchData(year) {\n    this.loadSheet(year)\n      .then(rawData => {\n        // console.log(rawData);\n        // debugger;\n\n        const data = this.normalize(rawData);\n        const totals = this.calculateYearlyTotals(data);\n        const streaks = this.calculateStreaksOfActivity(data);\n        const monthly = this.calculateMonthlyTotals(data);\n        const filter = 'all';\n        const filteredData = this.calculateFilteredData(data, filter);\n        this.setState({ data, totals, monthly, streaks, filter, filteredData });\n\n        ReactTooltip.rebuild();\n      })\n      .catch(e => console.error(e));\n  }\n\n  calculateFilteredData(data, filter) {\n    // weights: 5km by bike is my equivalent of a 1km run or a 10min workout\n    const bikeWeight = ['all', 'bike'].includes(filter) ? 1 : 0;\n    const runWeight = ['all', 'run'].includes(filter) ? 5 : 0;\n    const workoutWeight = ['all', 'workout'].includes(filter) ? 0.5 : 0;\n\n    // calculate the \"day score\"\n    return data.map(day => ({\n      ...day,\n      score: day.bike * bikeWeight + day.run * runWeight + day.workout * workoutWeight,\n    }));\n  }\n\n  classForValue(day) {\n    if (!day) return 'color-empty';\n\n    if (day.score === 0) return 'color-empty';\n    if (day.score < 10) return 'color-github-1';\n    if (day.score < 25) return 'color-github-2';\n    if (day.score < 50) return 'color-github-3';\n    return 'color-github-4';\n  }\n\n  render() {\n    const customTooltipDataAttrs = (value) => {\n      if (!value || !value.date) return;\n\n      const lines = [ value.date ];\n      value.bike && lines.push(`${value.bike} km by bike`);\n      value.run && lines.push(`${value.run} km ran`);\n      value.workout && lines.push(`${value.workout} min of workout`);\n      value.comments && lines.push(value.comments);\n\n      return { 'data-tip': lines.join('<br />') };\n    };\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Unstoppable.</h1>\n        </header>\n        <div className=\"HeatmapContainer\">\n          <div className=\"Heatmap\">\n            <CalendarHeatmap\n              startDate={new Date(`${this.state.year}-01-01`)}\n              endDate={new Date(`${this.state.year}-12-31`)}\n              values={this.state.filteredData}\n              classForValue={this.classForValue}\n              showWeekdayLabels\n              tooltipDataAttrs={customTooltipDataAttrs}\n              weekdayLabels={['', 'Mo', '', 'We', '', 'Fri', '']}\n            />\n          </div>\n          <div className=\"Filters\">\n            <div>\n              <input type=\"radio\"\n                checked={this.state.filter === 'all'}\n                onChange={() => this.setState({ filter: 'all' })}\n              />\n              <span role=\"img\" aria-label=\"all\"> &#x1F30D;</span>\n            </div>\n            <div>\n              <input type=\"radio\"\n                checked={this.state.filter === 'bike'}\n                onChange={() => this.setState({ filter: 'bike' })}\n              />\n              <span role=\"img\" aria-label=\"bike\"> &#x1F6B4;</span>\n            </div>\n            <div>\n              <input type=\"radio\"\n                checked={this.state.filter === 'run'}\n                onChange={() => this.setState({ filter: 'run' })}\n              />\n              <span role=\"img\" aria-label=\"run\"> &#x1F3C3;</span>\n            </div>\n            <div>\n              <input type=\"radio\"\n                checked={this.state.filter === 'workout'}\n                onChange={() => this.setState({ filter: 'workout' })}\n              />\n              <span role=\"img\" aria-label=\"workout\"> &#x1F3CB;</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"Totals\">\n          Total of {this.state.totals.bike} km by &#x1F6B4;, {this.state.totals.run} km by &#x1F3C3;\n          and {Math.floor(this.state.totals.workout / 60)} hours of &#x1F3CB; this year.<br/>\n          Current streak of activity is {this.state.streaks.current.length} days. Longest is {this.state.streaks.longest.length} days.\n        </div>\n\n        {\n          ['bike', 'run', 'workout'].includes(this.state.filter) &&\n          (<div className=\"mt\">\n            {Object.entries(this.state.monthly).map(([month, totals]) => (\n              <div key={month}>{month}: {totals[this.state.filter]}</div>\n            ))}\n          </div>)\n        }\n\n        <div className=\"mt\">\n          <input type=\"radio\"\n            checked={this.state.year === '2018'}\n            onChange={() => this.setState({ year: '2018' })}\n          /> 2018\n          <input type=\"radio\"\n            checked={this.state.year === '2019'}\n            onChange={() => this.setState({ year: '2019' })}\n          /> 2019\n          <input type=\"radio\"\n            checked={this.state.year === '2020'}\n            onChange={() => this.setState({ year: '2020' })}\n          /> 2020\n        </div>\n\n        <ReactTooltip effect=\"solid\" multiline />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}